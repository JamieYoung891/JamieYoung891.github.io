{"version":3,"sources":["JamieWho/hooks/useData.js","JamieWho/component/LoadIndicator.js","JamieWho/component/toggleNav.js","JamieWho/component/Header.js","JamieWho/component/Nav.js","JamieWho/component/Slogan.js","JamieWho/component/Footer.js","JamieWho/component/Resume.js","JamieWho/component/toggleHiddenRight.js","JamieWho/component/PortfolioItem.js","JamieWho/component/Portfolio.js","JamieWho/component/Narrative.js","JamieWho/component/Contacts.js","JamieWho/JamieWho.js","App.js","serviceWorker.js","index.js"],"names":["useData","useState","data","setData","loadDataNum","setLoadDataNum","loadedDataNum","setLoadedDataNum","useEffect","contents","map","componentData","layout","dataKey","dataNum","Object","keys","length","__data","loaded","name","key","Tabletop","init","simpleSheet","callback","container","forEach","elements","dataInsertor","loadInfo","isDataReady","LoadIndicator","props","max","value","className","setClassName","c","setTimeout","id","number","Math","floor","getPercent","toggleNav","button","document","getElementsByClassName","classList","toggle","Header","info","contentMode","setContentMode","website","onClick","title","description","buttons","item","push","target","add","remove","headerNav","Nav","content","itemNum","setItemNum","root","getElementById","trigger","hide","indicate","mainCurrent","subCurrent","set","list","contentName","i","itemName","__className","trg","nav","toContent","scrollTo","makeList","itemList","index","itemData","assign","portfolio","replace","g","toLowerCase","getBoundingClientRect","top","scrollTop","contains","toItem","Slogan","slogan","getSlogan","categoryName","els","filter","o","category","clName","em","coda","Footer","contact","developer","nameEn","titleEn","href","address","contacts","Resume","resume","skills","nameKr","rel","prefix","contactList","sectionInfoData","elms","templete","sectionInfo","itemElmsArray","projectsData","desc","detail","dangerouslySetInnerHTML","__html","skillsData","skillsCategory","subCategory","categoryItemElmsArray","j","resumeData","includes","split","titleKr","sectionElms","toggleHiddenRight","elm","PortfolioItem","arrayMaker","elmArray","circumstances","solutions","Portfolio","dataObject","Narrative","narrative","narrativeData","section","isList","sentence","itemElm","itemElms","makeSection","Contacts","childElms","_key","getContactsElm","JamieWho","componentNames","components","componentName","dataNames","componentInserter","App","appMode","setAppMode","chooseApp","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ac0e498f.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport Tabletop from 'tabletop'\r\nimport map from './map'\r\n\r\n\r\nexport const useData = () => {\r\n\r\n  const [data, setData] = useState(false);\r\n\r\n  const [loadDataNum, setLoadDataNum] = useState(0);\r\n  const [loadedDataNum, setLoadedDataNum] = useState(0);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const { contents, componentData, layout, dataKey } = map\r\n    const dataNum = Object.keys(dataKey).length; setLoadDataNum(dataNum)\r\n\r\n\r\n\r\n    let __data = { contents, componentData, layout }\r\n\r\n    let loaded = 0;\r\n    const dataInsertor = (name, data) => {\r\n      let container = {}, keys = Object.keys(data);\r\n\r\n      keys.forEach(key => container[key] = data[key].elements)\r\n      __data[name] = container;\r\n      setLoadedDataNum(++loaded);\r\n    }\r\n\r\n    for (let name in dataKey) {\r\n      let key = dataKey[name]\r\n\r\n      Tabletop.init({\r\n        key: key, simpleSheet: false,\r\n        callback: (data) => { dataInsertor(name, data) }\r\n      })\r\n    }\r\n\r\n    setData(__data)\r\n  }, [])\r\n\r\n\r\n\r\n  return {\r\n    data: data,\r\n    loadInfo: {\r\n      loadDataNum: loadDataNum,\r\n      loadedDataNum: loadedDataNum,\r\n      isDataReady: loadDataNum && loadDataNum === loadedDataNum\r\n    }\r\n  }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport '../css/LoadIndicator.css'\r\n\r\nfunction LoadIndicator(props) {\r\n  const { loadDataNum: max, loadedDataNum: value } = props.data\r\n  const [className, setClassName] = useState(\"load-indicator position-center\");\r\n\r\n  useEffect(() => {\r\n    if (max && max === value) {\r\n      setClassName( c =>`${c} fade-out`)\r\n      setTimeout(() => {\r\n        setClassName(c => `${c} display-none`)\r\n      }, 1500);\r\n    }\r\n  }, [max, value])\r\n\r\n  return (\r\n    <section id=\"load-indicator\" className={className}>\r\n      <div className=\"load-indicator-wrapper fade-in\">\r\n        <progress className=\"load-indicator-progress\" max={max} value={value}></progress>\r\n        <div className=\"load-indicator-text\">{getPercent() + \"%\"}</div>\r\n      </div>\r\n    </section>\r\n  )\r\n\r\n  function getPercent() {\r\n    let number = Math.floor((value / max) * 100);\r\n    return number ? number : 0\r\n  }\r\n}\r\n\r\nexport default LoadIndicator;","export const toggleNav = () => {\r\n  const button = document.getElementsByClassName(\"jamie-who-nav\")[0]\r\n  if (button) button.classList.toggle(\"nav-show\")\r\n}","import React from 'react';\r\nimport { toggleNav } from \"./toggleNav\";\r\nimport '../css/Header.css';\r\n\r\nfunction Header(props) {\r\n  const { contents, info, contentMode, setContentMode } = props.data\r\n  const data = info.website[0]\r\n\r\n  function headerClassName() {\r\n    if (contentMode === \"intro\") return \"header-special fade-in\"\r\n    else return \"header-normal\"\r\n  }\r\n\r\n  function titleClassName() {\r\n    if (contentMode === \"intro\") return \"text-heading\"\r\n    else return \"jamie-who-logo button\"\r\n  }\r\n\r\n  function headerNav() {\r\n    if (contentMode === \"intro\") {\r\n      let buttons = []\r\n\r\n      contents.forEach(item =>\r\n        buttons.push(\r\n          <li\r\n            key={\"header_nav_\" + item.name}\r\n            className={\"header-nav-item button \" + item.name}\r\n            onClick={() => {\r\n              let target = document.getElementsByClassName(\"jamie-who-header-wrapper\")[0];\r\n              target.classList.add(\"fade-out\")\r\n              setTimeout(() => {\r\n                target.classList.remove(\"fade-out\")\r\n                setContentMode(item.name)\r\n              }, 1300);\r\n            }}\r\n          >{item.title}</li>\r\n        )\r\n      );\r\n\r\n      return (\r\n        <nav className=\"header-nav fade-in\">\r\n          <ul className=\"header-nav-list\">{buttons}</ul>\r\n        </nav>\r\n      )\r\n    } else return\r\n  }\r\n\r\n  return (\r\n    <header className={\"jamie-who-header \" + headerClassName()}>\r\n      <div className=\"jamie-who-header-wrapper\">\r\n        <div\r\n          onClick={contentMode === 'intro' ? null : toggleNav}\r\n          className={\"header-title \" + titleClassName()}\r\n        >\r\n          <span>{contentMode === 'intro' ? data.title : \"J\"}</span>\r\n        </div>\r\n        <div className=\"header-dscrp\">\r\n          {data.description}\r\n        </div>\r\n        {headerNav()}\r\n      </div>\r\n    </header>\r\n  )\r\n\r\n\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { toggleNav } from \"./toggleNav\";\r\nimport \"../css/Nav.css\"\r\nimport \"../css/Nav_responsive.css\"\r\n\r\nfunction Nav({ data }) {\r\n  const { contentMode, setContentMode, contents, content, itemNum, setItemNum } = data;\r\n  const root = document.getElementById(\"root\");\r\n\r\n  const className = {\r\n    trigger: {\r\n      hide: \"nav-hide\",\r\n      indicate: \"nav-indicate\",\r\n      mainCurrent: \"nav-main-current\",\r\n      subCurrent: \"nav-sub-current\"\r\n    },\r\n\r\n    set: {\r\n\r\n      list: (contentName) => { return !contentName ? \"nav-main-contents\" : \"nav-sub-contents\" },\r\n\r\n      item: (contentName, i, itemName) => {\r\n        let __className, trg = className.trigger;\r\n\r\n        if (!contentName) {\r\n          __className = \"nav-main-item button nav-main-item-\" + i\r\n          if (itemName === contentMode) __className += \" \" + trg.mainCurrent\r\n\r\n        } else __className = \"nav-sub-item button nav-sub-item-\" + i\r\n\r\n        return __className\r\n      },\r\n\r\n      nav: () => {\r\n        const trg = className.trigger;\r\n\r\n        switch (contentMode) {\r\n          case \"intro\":\r\n          case \"contacts\":\r\n            return trg.hide\r\n          default:\r\n            return trg.indicate\r\n        }\r\n      }\r\n\r\n    },\r\n  }\r\n\r\n  const\r\n\r\n    toContent = (contentName) => {\r\n      setContentMode(contentName);\r\n      toggleNav();\r\n      document.getElementById(\"root\").scrollTo(0, 0);\r\n    },\r\n\r\n    toItem = (itemName) => {\r\n      switch (contentMode) {\r\n        case \"portfolio\":\r\n          for (let i = 0; i < content.index.length; i++)\r\n            if (content.index[i].name === itemName) {\r\n              setItemNum(Object.assign({}, itemNum, { portfolio: i }));\r\n            }\r\n          break;\r\n        default:\r\n          let target = document.getElementsByClassName(`section-${\r\n            itemName.replace(\r\n              /([A-Z])/g,\r\n              (g) => `-${g[0].toLowerCase()}`\r\n            )\r\n            }`)\r\n\r\n          if (target.length)\r\n            root.scrollTo(0, target[0].getBoundingClientRect().top + root.scrollTop)\r\n\r\n          break;\r\n      }\r\n\r\n      if (document.getElementsByClassName(\"jamie-who-nav\")[0].classList.contains(\"nav-show\")) toggleNav();\r\n    }\r\n\r\n\r\n  const makeList = (contentName) => {\r\n    let itemList = [], data;\r\n\r\n    if (contentName && !content) { } else {\r\n      !contentName ? data = contents : data = content.index\r\n\r\n      for (let i = 0; i < data.length; i++) {\r\n        const itemData = data[i];\r\n\r\n        itemList.push(\r\n          <li\r\n            key={i}\r\n            className={className.set.item(contentName, i, itemData.name)}\r\n            onClick={\r\n              contentName ? () => {\r\n                toItem(itemData.name)\r\n              }\r\n                :\r\n                () => toContent(itemData.name)\r\n            }\r\n          >\r\n            <div className=\"item-text\">{itemData.title}</div>\r\n          </li>\r\n        )\r\n      }\r\n    }\r\n\r\n    return (\r\n      <ul className={className.set.list(contentName)}>\r\n        {itemList}\r\n      </ul>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <nav className={\"jamie-who-nav fade-in \" + className.set.nav()}>\r\n      <section className=\"nav-wrapper\">\r\n        <div\r\n          className=\"nav-logo jamie-who-logo button\"\r\n          onClick={() => toContent(\"intro\")}\r\n        >\r\n          <span className=\"nav-logo-txt\">J</span>\r\n        </div>\r\n        {makeList(contentMode)}\r\n        {makeList()}\r\n        <div\r\n          className=\"nav-close close-button\"\r\n          onClick={toggleNav}\r\n        ></div>\r\n      </section>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Nav;","import React from \"react\";\r\nimport \"../css/Slogan.css\";\r\n\r\n\r\nfunction Slogan(props) {\r\n  const slogan = props.data;\r\n\r\n  const getSlogan = categoryName => {\r\n    let els = [];\r\n\r\n    const data = slogan.filter(o => o.category === categoryName);\r\n    if (data) for (let i = 0; i < data.length; i++) {\r\n      const o = data[i];\r\n      const clName = `slogan-${categoryName} ${categoryName}-${i}`\r\n\r\n      els.push(\r\n        <span key={i} className={clName}>\r\n          <em>{o.em}</em>{o.coda}\r\n        </span>\r\n      )\r\n      \r\n      if (i !== data.length - 1)\r\n      els.push(<span key={\"spacer\" + i} className=\"slogan-spacer\"> </span>)\r\n    }\r\n\r\n    return (\r\n      <div key={categoryName} className={\"footer-slogan-\" + categoryName}>\r\n        <span className=\"slogan-text\">{els}</span>\r\n        <span className=\"slogan-filler\"></span>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <section className=\"footer-slogan\">\r\n      {getSlogan(\"main\")}\r\n      {getSlogan(\"sub\")}\r\n      {getSlogan(\"theme\")}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Slogan","import React from 'react';\r\n\r\nimport Slogan from \"./Slogan\"\r\n\r\nimport \"../css/Footer.css\";\r\n\r\nfunction Footer(props) {\r\n  const { contact, developer, slogan } = props.data.info\r\n\r\n  const contacts = () => {\r\n    const els = [];\r\n\r\n    for (let i = 0; i < contact.length; i++) {\r\n      const data = contact[i], key = \"contact-\" + i;\r\n      els.push(\r\n        <a\r\n          key={key}\r\n          className={key + \" contact-item contact-item-\" + data.name.toLowerCase()}\r\n          href={data.address}\r\n        ><span>{data.title}</span></a>\r\n      )\r\n    }\r\n\r\n    return els\r\n  }\r\n\r\n  return (\r\n    <footer className=\"jamie-who-footer\">\r\n      <Slogan data={slogan}></Slogan>\r\n      <section className=\"footer-info\">\r\n        <div className=\"footer-info-wrapper\">\r\n          <div className=\"info-copyright\">\r\n            © 2019 <span className=\"copyright-owner\">{developer[0].nameEn}</span>, All Rights Reserved.\r\n        </div>\r\n          <div className=\"info-developer\">\r\n            <span className=\"developer-name\">{developer[0].nameEn}</span>\r\n            <span className=\"developer-title\">{developer[0].titleEn.toLowerCase()}</span>\r\n          </div>\r\n          <div className=\"info-contact\">\r\n            {contacts()}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;","import React from \"react\"\r\nimport \"../css/Resume.css\"\r\n\r\nfunction Resume(props) {\r\n  const { info, portfolio, resume, skills } = props.data\r\n\r\n  const contactList = () => {\r\n    const els = [], data = info.contact;\r\n    for (let i = 0; i < data.length; i++) {\r\n      const item = data[i];\r\n      els.push(\r\n        <a\r\n          key={\"contact-\" + i}\r\n          className={\"developer-contact-item developer-contact-\" + item.name.toLowerCase()}\r\n          rel=\"noopener noreferrer\"\r\n          target=\"_blank\"\r\n          href={item.prefix + item.address}\r\n        ><span>{item.title}</span></a>\r\n      )\r\n    }\r\n    return els\r\n  }\r\n\r\n  const sectionElms = () => {\r\n\r\n    const sectionInfoData = resume.index,\r\n      elms = [];\r\n\r\n    const templete = (sectionInfo) => {\r\n\r\n      const\r\n        itemElmsArray = [],\r\n\r\n        key = sectionInfo.name.replace(\r\n          /([A-Z])/g,\r\n          (g) => `-${g[0].toLowerCase()}`\r\n        )\r\n\r\n\r\n      switch (sectionInfo.name) {\r\n\r\n        case \"sideProjects\":\r\n          const\r\n            projectsData = portfolio.info;\r\n\r\n          for (let i = 0; i < projectsData.length; i++) {\r\n            const item = projectsData[i]\r\n\r\n            itemElmsArray.push(\r\n              <div key={`${key}-${i}`} className={`list-item list-item-${key}`}>\r\n                <dt>\r\n                  <span>{item.title}</span>\r\n                  <span>{item.desc}</span>\r\n                </dt>\r\n                <dd>\r\n                  <ul>\r\n                    <li>{item.detail}</li>\r\n                    {item.skills !== \"\" ? <li dangerouslySetInnerHTML={{ __html: item.skills }}></li> : \"\"}\r\n                  </ul>\r\n                </dd>\r\n              </div>\r\n            )\r\n          }\r\n          break;\r\n\r\n        case \"technicalSkills\":\r\n          const skillsData = skills.index, skillsCategory = [\"Client-Side\", \"Server-Side\", \"Development-Tool\"];\r\n\r\n          for (let i = 0; i < skillsCategory.length; i++) {\r\n            const\r\n              subCategory = skillsData.filter(\r\n                o => o.subCategory === skillsCategory[i]\r\n              ),\r\n              categoryItemElmsArray = [];\r\n\r\n            for (let j = 0; j < subCategory.length; j++) {\r\n              const item = subCategory[j];\r\n\r\n              categoryItemElmsArray.push(\r\n                <li\r\n                  key={`${key}-${i}-${j}`}\r\n                >\r\n                  {(() => {\r\n                    if (item.em) return <em>{item.title}</em>\r\n                    else return item.title\r\n                  })()}\r\n                </li>\r\n              )\r\n            }\r\n\r\n            itemElmsArray.push(\r\n              <li\r\n                key={`${key}-${i}`}\r\n                className={`list-item list-item-${key}`}\r\n              >\r\n                <div className=\"sublist-title\">{skillsCategory[i]}</div>\r\n                <ul>\r\n                  {categoryItemElmsArray}\r\n                </ul>\r\n              </li>\r\n            )\r\n          }\r\n          break;\r\n\r\n        default:\r\n          let resumeData = resume.data.filter(\r\n            o => o.category === sectionInfo.name\r\n          );\r\n\r\n          for (let i = 0; i < resumeData.length; i++) {\r\n            const item = resumeData[i];\r\n            let desc = [];\r\n\r\n            if (!(item.desc.includes(\", \"))) desc.push(item.desc)\r\n            else desc = item.desc.split(\", \")\r\n\r\n            for (let i = 0; i < desc.length; i++)\r\n              desc[i] = <span key={i}>{desc[i]}</span>\r\n\r\n            itemElmsArray.push(\r\n              <li\r\n                key={`${key}-${i}`}\r\n                className={`list-item list-item-${key}`}\r\n              >\r\n                <div className=\"list-item-title\"><span>{item.subCategory}</span></div>\r\n                <div className=\"list-item-desc\">\r\n                  <span dangerouslySetInnerHTML={{ __html: item.title }}></span>\r\n                  {desc}\r\n                </div>\r\n              </li>\r\n            )\r\n          }\r\n          break;\r\n      }\r\n\r\n      return (\r\n        <section key={key} className={`resume-section section-${key}`}>\r\n          <div className={`resume-section-wrapper section-${key}-wrapper`}>\r\n            <div className={`section-list-title list-${key}-title`}>\r\n              <span>{sectionInfo.titleKr}</span>\r\n              <span>{sectionInfo.name}</span>\r\n            </div>\r\n            <ul className={`section-list list-${key}`}>\r\n              {itemElmsArray}\r\n            </ul>\r\n          </div>\r\n        </section>\r\n      )\r\n    };\r\n\r\n    for (let i = 1; i < sectionInfoData.length; i++)\r\n      elms.push(templete(sectionInfoData[i]))\r\n\r\n    return elms\r\n  }\r\n\r\n\r\n  return (\r\n    <article className=\"jamie-who-content content-resume fade-in\">\r\n      <section className=\"resume-developer section-jamie-young\">\r\n        <div className=\"resume-developer-wrapper\">\r\n          <div className=\"developer-div-image\"></div>\r\n          <div className=\"developer-div-info\">\r\n            <span className=\"developer-info-name\">{info.developer[0].nameKr}<span>{info.developer[0].nameEn}</span></span>\r\n            <span className=\"developer-info-title\">{info.developer[0].titleEn.toLowerCase()}</span>\r\n          </div>\r\n          <div className=\"developer-div-contact\">\r\n            {contactList()}\r\n          </div>\r\n        </div>\r\n      </section>\r\n      {sectionElms()}\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default Resume;","export const toggleHiddenRight = (elm) => { if (elm) elm.classList.toggle(\"hidden-right\") }","import React from \"react\"\r\nimport \"../css/PortfolioItem.css\"\r\nimport { toggleHiddenRight } from \"./toggleHiddenRight\";\r\n\r\nfunction PortfolioItem(props) {\r\n  const { data, itemNum, setItemNum } = props;\r\n  const info = data.info[itemNum],\r\n    arrayMaker = (target, name) => {\r\n      let elmArray = (target.split(\"\\n\"))\r\n\r\n      for (let i = 0; i < elmArray.length; i++)\r\n        elmArray[i] = (\r\n          <li\r\n            key={`${name}-${i}`}\r\n            className={`list-item`}\r\n          >{elmArray[i]}</li>\r\n        )\r\n\r\n      return elmArray\r\n    };\r\n  const circumstances = arrayMaker(info.circumstances, \"circumstances\"),\r\n    solutions = arrayMaker(info.solutions, \"solutions\");\r\n\r\n  return (\r\n    <section className=\"jamie-who-portfolio-item show-right hidden-right\">\r\n      <div className=\"jamie-who-portfolio-item-title\">\r\n        <div className=\"name\">{info.title}</div>\r\n        <div className=\"desc\">{info.desc}</div>\r\n      </div>\r\n      <div className=\"jamie-who-portfolio-item-desc\">\r\n        <div className=\"circumstances\">\r\n          <div className=\"title\">circumstances</div>\r\n          <ul className=\"list\">\r\n            {circumstances}\r\n          </ul>\r\n        </div>\r\n        <div className=\"solutions\">\r\n          <div className=\"title\">solutions</div>\r\n          <ul className=\"list\">\r\n            {solutions}\r\n          </ul>\r\n        </div>\r\n        <div className=\"narrative\"></div>\r\n      </div>\r\n      <div className=\"jamie-who-portfolio-item-nav\">\r\n        {itemNum > 0 ?\r\n          <div\r\n            className=\"before button\"\r\n            onClick={() => setItemNum(itemNum - 1)}\r\n          ></div> : null\r\n        }\r\n        {itemNum < data.info.length - 1 ?\r\n          <div\r\n            className=\"after button\"\r\n            onClick={() => setItemNum(itemNum + 1)}\r\n          ></div> : null\r\n        }\r\n      </div>\r\n      <div\r\n       className=\"close-button\"\r\n       onClick={()=> toggleHiddenRight(\r\n         document.getElementsByClassName(\"jamie-who-portfolio-item\")[0]\r\n       )}\r\n      ></div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default PortfolioItem","import React from \"react\"\r\nimport \"../css/Portfolio.css\"\r\n\r\nimport PortfolioItem from \"./PortfolioItem\"\r\nimport { toggleHiddenRight } from \"./toggleHiddenRight\";\r\n\r\nfunction Portfolio({ data }) {\r\n  const { itemNum, setItemNum, portfolio } = data\r\n  const { info } = portfolio;\r\n\r\n  const\r\n    buttons = () => {\r\n      const buttons = []\r\n      for (let i = 0; i < info.length; i++) {\r\n        buttons.push(\r\n          <li\r\n            key={`button-${i}`}\r\n            className={`portfolio-item button ${\r\n              (itemNum.portfolio === i) ? \"ticked\" : \"unticked\"\r\n              }`}\r\n            onClick={() => setItemNum(Object.assign({}, itemNum, { portfolio: i }))}\r\n          ></li>\r\n        )\r\n      }\r\n\r\n      return (\r\n        <ul className=\"portfolio-buttons\">\r\n          {buttons}\r\n        </ul>\r\n      )\r\n    }\r\n    ,\r\n    template = (dataObject) => {\r\n      return (\r\n        <section className=\"portfolio-template\">\r\n          <div\r\n            className=\"portfolio-template-img button\"\r\n            onClick={() => toggleHiddenRight(\r\n              document.getElementsByClassName(\"jamie-who-portfolio-item\")[0]\r\n            )}\r\n          ></div>\r\n          <div className=\"portfolio-template-text\">\r\n            <div className=\"portfolio-template-text-heading\">\r\n              <div className=\"portfolio-template-heading-title\">{dataObject.title}</div>\r\n              <div className=\"portfolio-template-heading-desc\">{dataObject.desc}</div>\r\n            </div>\r\n            <div className=\"portfolio-template-text-content\">\r\n              <div className=\"portfolio-template-content-detail\">{dataObject.detail}</div>\r\n              {dataObject.skills !== \"\" ?\r\n                <div\r\n                  className=\"portfolio-template-content-skills\"\r\n                  dangerouslySetInnerHTML={{ __html: dataObject.skills }}\r\n                ></div> :\r\n                null\r\n              }\r\n            </div>\r\n          </div>\r\n        </section>\r\n      )\r\n    }\r\n  return (\r\n    <article className=\"jamie-who-content content-portfolio fade-in\">\r\n      {buttons()}\r\n      {template(info[itemNum.portfolio])}\r\n      <PortfolioItem data={portfolio} itemNum={itemNum.portfolio} setItemNum={setItemNum}></PortfolioItem>\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default Portfolio","import React from 'react';\r\nimport \"../css/Narrative.css\";\r\n\r\nimport Portfolio from \"./Portfolio\"\r\n\r\nfunction Narrative({ data }) {\r\n  const { narrative, skills } = data;\r\n\r\n  const makeSection = () => {\r\n\r\n    const sectionInfoData = narrative.index,\r\n      elms = [];\r\n\r\n\r\n\r\n    const templete = (sectionInfo) => {\r\n\r\n      const\r\n        itemElmsArray = [],\r\n\r\n        key = sectionInfo.name.replace(\r\n          /([A-Z])/g,\r\n          (g) => `-${g[0].toLowerCase()}`\r\n        )\r\n\r\n      const narrativeData = narrative.narrative.filter(\r\n        o => o.section === sectionInfo.name\r\n      );\r\n\r\n\r\n\r\n      for (let i = 0; i < narrativeData.length; i++) {\r\n        const item = narrativeData[i];\r\n\r\n\r\n\r\n        if (item.isList) {\r\n          const list = skills.index.filter(\r\n            o => o.category === item.sentence\r\n          )\r\n\r\n          for (let i = 0; i < list.length; i++)\r\n            list[i] = (\r\n              <li\r\n                key={`${item.sentence}-${i}`}\r\n                className={\"narrative-section-skills-list-item skills-list-item\"}\r\n              >{list[i].em ?\r\n                <em>{list[i].title}</em> :\r\n                <span>{list[i].title}</span>}\r\n              </li>\r\n            )\r\n\r\n\r\n          itemElmsArray.push(\r\n            <ul\r\n              key={`${key}-${i}`}\r\n              className={`narrative-section-item narrative-section-skills-list ${item.sentence}-skills-list`}\r\n            >{list}\r\n            </ul>\r\n          )\r\n\r\n\r\n\r\n        } else {\r\n          let itemElm = [];\r\n\r\n          if (!(item.sentence.includes(\"\\n\"))) itemElm.push(item.sentence)\r\n          else itemElm = item.sentence.split(\"\\n\")\r\n\r\n          for (let i = 0; i < itemElm.length; i++) {\r\n            if (itemElm[i].includes('\"')) {\r\n\r\n              let itemElms = itemElm[i].split('\"');\r\n              itemElm[i] = (\r\n                <span key={i}>\r\n                  {itemElms[0]}\r\n                  <em>{itemElms[1]}</em>\r\n                  {itemElms[2]}\r\n                </span>\r\n              )\r\n\r\n            } else itemElm[i] = <span key={i}>{itemElm[i]}</span>\r\n          }\r\n\r\n\r\n          itemElmsArray.push(\r\n            <div\r\n              key={`${key}-${i}`}\r\n              className={`narrative-section-item ${item.className}`}\r\n            >{itemElm}\r\n            </div>\r\n          )\r\n        }\r\n      }\r\n\r\n\r\n\r\n      return (\r\n        <section key={key} className={`narrative-section section-${key}`}>\r\n          <div className={`narrative-section-signpost`}>\r\n            <div className={`narrative-section-signpost-text`}>\r\n              {sectionInfo.title}\r\n            </div>\r\n          </div>\r\n          <div className={`narrative-section-wrapper`}>\r\n            {itemElmsArray}\r\n          </div>\r\n        </section>\r\n      )\r\n    };\r\n\r\n\r\n\r\n    for (let i = 0; i < sectionInfoData.length; i++)\r\n      elms.push(templete(sectionInfoData[i]))\r\n\r\n    elms.push(\r\n      <Portfolio data={data}></Portfolio>\r\n    );\r\n\r\n    return elms\r\n  }\r\n\r\n  return (\r\n    <article className=\"jamie-who-content content-narrative fade-in\">\r\n      {makeSection()}\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default Narrative;","import React from \"react\";\r\nimport \"../css/Contacts.css\"\r\n\r\nexport default function Contacts({ data }) {\r\n  const { contact } = data.info\r\n\r\n  const getContactsElm = () => {\r\n    const childElms = []\r\n\r\n    for (let i = 0; i < contact.length; i++) {\r\n      const item = contact[i], _key = `contacts-info-list-item-${i}`;\r\n      childElms.push(\r\n        <li key={_key} className={`contacts-info-list-item ${_key}`}>\r\n          <a\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n            href={item.prefix + item.address}\r\n          ><span className=\"item-info\">{item.address}</span></a>\r\n        </li>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <ul className=\"contacts-info-list\">\r\n        <div className=\"title\">\r\n          <span className=\"title-text\">contacts</span>\r\n        </div>\r\n        {childElms}\r\n      </ul>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <article className=\"jamie-who-content content-contacts fade-in\">\r\n      <section className=\"contacts-title-section\">\r\n        <div className=\"contacts-info-section-wrapper\">\r\n          <div className=\"title\">\r\n            <span className=\"title-text\">시간을 내어 주셔서<em>감사합니다!</em></span>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section className=\"contacts-info-section\">\r\n        <div className=\"contacts-info-section-wrapper\">\r\n          {getContactsElm()}\r\n        </div>\r\n      </section>\r\n    </article>\r\n  )\r\n}","import React, { useState } from 'react'\r\nimport { useData } from \"./hooks/useData\"\r\n\r\nimport \"./css/JamieWho.css\"\r\n\r\nimport LoadIndicator from \"./component/LoadIndicator\"\r\nimport Header from \"./component/Header\"\r\nimport Nav from \"./component/Nav\"\r\nimport Footer from \"./component/Footer\"\r\n\r\nimport Resume from \"./component/Resume\"\r\nimport Portfolio from \"./component/Portfolio\"\r\nimport Narrative from \"./component/Narrative\"\r\nimport Contacts from \"./component/Contacts\"\r\n\r\nfunction JamieWho(props) {\r\n  // const { setAppMode } = props\r\n  const [contentMode, setContentMode] = useState(\"intro\");\r\n  const { data, loadInfo } = useData(); // getData from Google Spreadsheet using Tabletop\r\n  const [itemNum, setItemNum] = useState({portfolio: 0});\r\n\r\n  const componentInserter = () => {\r\n    if (loadInfo.isDataReady) {\r\n      const componentNames = [], components = [];\r\n\r\n      if (contentMode === \"intro\") componentNames.push(\"header\")\r\n      else if (contentMode === \"contacts\") Object.assign(componentNames, [\"header\", \"nav\", \"content\"])\r\n      else Object.assign(componentNames, data.layout);\r\n\r\n      componentNames.forEach(componentName => {\r\n        if (componentName === \"content\") componentName = contentMode;\r\n\r\n        const __data = {}, dataNames = data.componentData[componentName];\r\n        for (let i = 0; i < dataNames.length; i++) {\r\n          let item = false;\r\n\r\n          const key = dataNames[i];\r\n          switch (key) {\r\n            case \"contentMode\": item = contentMode; break;\r\n            case \"setContentMode\": item = setContentMode; break;\r\n\r\n            case \"itemNum\": item = itemNum; break;\r\n            case \"setItemNum\": item = setItemNum; break;\r\n\r\n            case \"content\":\r\n              if (!data[contentMode]) break;\r\n              else item = data[contentMode]\r\n              break;\r\n\r\n            default: item = data[key]\r\n              break;\r\n          }\r\n\r\n          __data[key] = item\r\n        }\r\n\r\n        switch (componentName) {\r\n\r\n          case \"header\":\r\n            components.push(<Header key={componentName} data={__data}></Header>)\r\n            break;\r\n          case \"nav\":\r\n            components.push(<Nav key={componentName} data={__data}></Nav>)\r\n            break;\r\n          case \"footer\":\r\n            components.push(<Footer key={componentName} data={__data}></Footer>)\r\n            break;\r\n\r\n          case \"intro\":\r\n            break;\r\n          case \"resume\":\r\n            components.push(<Resume key={contentMode} data={__data}></Resume>)\r\n            break;\r\n          case \"portfolio\":\r\n            components.push(<Portfolio key={contentMode} data={__data}></Portfolio>)\r\n            break;\r\n          case \"narrative\":\r\n            components.push(<Narrative key={contentMode} data={__data}></Narrative>)\r\n            break;\r\n          case \"contacts\":\r\n            components.push(<Contacts key={contentMode} data={__data}></Contacts>)\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n\r\n      return components\r\n    } else return\r\n  }\r\n\r\n  return <div className=\"jamie-who\">\r\n    <LoadIndicator data={loadInfo}></LoadIndicator>\r\n    {componentInserter()}\r\n  </div>\r\n\r\n}\r\n\r\nexport default JamieWho;","import React, { useState } from 'react';\nimport JamieWho from './JamieWho/JamieWho';\n\nfunction App() {\n  const [appMode, setAppMode] = useState(\"JamieWho\");\n\n  function chooseApp(appMode) {\n    switch (appMode) {\n      case \"JamieWho\": return <JamieWho setAppMode={setAppMode}></JamieWho>;\n      default: return null\n    }\n  }\n\n  return chooseApp(appMode)\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './reset.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}